.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "starall\-core" "1" "" "" ""
.hy
.SH NAME
.PP
starall\-core \- Core daemon for Starall payment network
.SH SYNOPSYS
.PP
starall\-core [OPTIONS]
.SH DESCRIPTION
.PP
Starall is a decentralized, federated peer\-to\-peer network that allows
people to send payments in any asset anywhere in the world
instantaneously, and with minimal fee.
\f[C]Starall\-core\f[] is the core component of this network.
\f[C]Starall\-core\f[] is a C++ implementation of the Starall Consensus
Protocol configured to construct a chain of ledgers that are guaranteed
to be in agreement across all the participating nodes at all times.
.SS Configuration file
.PP
In most modes of operation, starall\-core requires a configuration file.
By default, it looks for a file called \f[C]starall\-core.cfg\f[] in the
current working directory, but this default can be changed by the
\f[C]\-\-conf\f[] command\-line option.
The configuration file is in TOML syntax.
The full set of supported directives can be found in
\f[C]%prefix%/share/doc/starall\-core_example.cfg\f[].
.SS Command line options
.IP \[bu] 2
\f[B]\-\-?\f[] or \f[B]\-\-help\f[]: Print the available command line
options and then exit..
.IP \[bu] 2
\f[B]\-\-c\f[] Send an HTTP command (#http-commands) to an already
running local instance of starall\-core and then exit.
For example:
.PP
\f[C]$\ starall\-core\ \-c\ info\f[]
.IP \[bu] 2
\f[B]\-\-conf FILE\f[]: Specify a config file to use.
You can use \[aq]\-\[aq] and provide the config file via STDIN.
\f[I]default \[aq]starall\-core.cfg\[aq]\f[]
.IP \[bu] 2
\f[B]\-\-convertid ID\f[]: Will output the passed ID in all known forms
and then exit.
Useful for determining the public key that corresponds to a given
private key.
For example:
.PP
\f[C]$\ starall\-core\ \-\-convertid\ SDQVDISRYN2JXBS7ICL7QJAEKB3HWBJFP2QECXG7GZICAHBK4UNJCWK2\f[]
.IP \[bu] 2
\f[B]\-\-dumpxdr FILE\f[]: Dumps the given XDR file and then exits.
.IP \[bu] 2
\f[B]\-\-loadxdr FILE\f[]: Load an XDR bucket file, for testing.
.IP \[bu] 2
\f[B]\-\-forcescp\f[]: This command is used to start a network from
scratch or when a network has lost quorum because of failed nodes or
otherwise.
It sets a flag in the database.
The next time starall\-core is run, starall\-core will start emitting
SCP messages based on its last known ledger.
Without this flag starall\-core waits to hear a ledger close from the
network before starting SCP. forcescp doesn\[aq]t change the
requirements for quorum so although this node will emit SCP messages SCP
won\[aq]t complete until there are also a quorum of other nodes also
emitting SCP messages on this same ledger.
.IP \[bu] 2
\f[B]\-\-fuzz FILE\f[]: Run a single fuzz input and exit.
.IP \[bu] 2
\f[B]\-\-genfuzz FILE\f[]: Generate a random fuzzer input file.
.IP \[bu] 2
\f[B]\-\-genseed\f[]: Generate and print a random public/private key and
then exit.
.IP \[bu] 2
\f[B]\-\-inferquorum\f[]: Print a potential quorum set inferred from
history.
.IP \[bu] 2
\f[B]\-\-checkquorum\f[]: Check quorum intersection from history to
ensure there is closure over all the validators in the network.
.IP \[bu] 2
\f[B]\-\-graphquorum\f[]: Print a quorum set graph from history.
.IP \[bu] 2
\f[B]\-\-offlineinfo\f[]: Returns an output similar to
\f[C]\-\-c\ info\f[] for an offline instance
.IP \[bu] 2
\f[B]\-\-ll LEVEL\f[]: Set the log level.
It is redundant with \f[C]\-\-c\ ll\f[] but we need this form if you
want to change the log level during test runs.
.IP \[bu] 2
\f[B]\-\-metric METRIC\f[]: Report metric METRIC on exit.
Used for gathering a metric cumulatively during a test run.
.IP \[bu] 2
\f[B]\-\-newdb\f[]: Clears the local database and resets it to the
genesis ledger.
If you connect to the network after that it will catch up from scratch.
.IP \[bu] 2
\f[B]\-\-newhist ARCH\f[]: Initialize the named history archive ARCH.
ARCH should be one of the history archives you have specified in the
starall\-core.cfg.
This will write a \f[C]\&.well\-known/starall\-history.json\f[] file in
the archive root.
.IP \[bu] 2
\f[B]\-\-printtxn FILE\f[]: Pretty\-print a binary file containing a
\f[C]TransactionEnvelope\f[].
If FILE is "\-", the transaction is read from standard input.
.IP \[bu] 2
\f[B]\-\-signtxn FILE\f[]: Add a digital signature to a transaction
envelope stored in binary format in FILE, and send the result to
standard output (which should be redirected to a file or piped through a
tool such as \f[C]base64\f[]).
The private signing key is read from standard input, unless FILE is "\-"
in which case the transaction envelope is read from standard input and
the signing key is read from \f[C]/dev/tty\f[].
In either event, if the signing key appears to be coming from a
terminal, starall\-core disables echo.
Note that if you do not have a STELLAR_NETWORK_ID environment variable,
then before this argument you must specify the \-\-netid option.
.IP \[bu] 2
\f[B]\-\-base64\f[]: When preceding \-\-printtxn or \-\-signtxn, alters
the behavior of the option to work on base64\-encoded XDR rather than
raw XDR.
.IP \[bu] 2
\f[B]\-\-sec2pub\f[]: Reads a secret key on standard input and outputs
the corresponding public key.
Both keys are in Starall\[aq]s standard base\-32 ASCII format.
.IP \[bu] 2
\f[B]\-\-netid STRING\f[]: The \-\-signtxn option requires a particular
network to sign for.
For example, the production starall network is
"\f[C]Public\ Global\ Starall\ Network\ ;\ September\ 2015\f[]" while
the test network is "\f[C]Test\ SDF\ Network\ ;\ September\ 2015\f[]".
.IP \[bu] 2
\f[B]\-\-test\f[]: Run all the unit tests.
.IP \[bu] 2
Suboptions specific to starall\-core:
.RS 2
.IP \[bu] 2
\f[C]\-\-all\-versions\f[] : run with all possible protocol versions
.IP \[bu] 2
\f[C]\-\-version\ <N>\f[] : run tests for protocol version N, can be
specified multiple times (default latest)
.IP \[bu] 2
\f[C]\-\-base\-instance\ <N>\f[] : run tests with instance numbers
offset by N, used to run tests in parallel
.RE
.IP \[bu] 2
For further
info (https://github.com/philsquared/Catch/blob/master/docs/command-line.md)
on possible options for test.
.IP \[bu] 2
For example this will run just the tests tagged with \f[C][tx]\f[] using
protocol versions 9 and 10 and stop after the first failure:
\f[C]starall\-core\ \-\-test\ \-a\ \-\-version\ 9\ \-\-version\ 10\ "[tx]"\f[]
.IP \[bu] 2
\f[B]\-\-version\f[]: Print version info and then exit.
.SS HTTP Commands
.PP
By default starall\-core listens for connections from localhost on port
11626.
You can send commands to starall\-core via a web browser, curl, or using
the \-\-c command line option (see above).
Most commands return their results in JSON format.
.IP \[bu] 2
\f[B]help\f[] Prints a list of currently supported commands.
.IP \[bu] 2
\f[B]catchup\f[] \f[C]/catchup?ledger=NNN[&mode=MODE]\f[] Triggers the
instance to catch up to ledger NNN from history; Mode is either
\[aq]minimal\[aq] (the default, if omitted) or \[aq]complete\[aq].
.IP \[bu] 2
\f[B]checkdb\f[] Triggers the instance to perform a background check of
the database\[aq]s state.
.IP \[bu] 2
\f[B]checkpoint\f[] Triggers the instance to write an immediate history
checkpoint.
And uploads it to the archive.
.IP \[bu] 2
\f[B]connect\f[] \f[C]/connect?peer=NAME&port=NNN\f[] Triggers the
instance to connect to peer NAME at port NNN.
.IP \[bu] 2
\f[B]dropcursor\f[]
.PD 0
.P
.PD
\f[C]/dropcursor?id=XYZ\f[] deletes the tracking cursor with identified
by \f[C]id\f[].
See \f[C]setcursor\f[] for more information.
.IP \[bu] 2
\f[B]info\f[] Returns information about the server in JSON format (sync
state, connected peers, etc).
.IP \[bu] 2
\f[B]ll\f[]
.PD 0
.P
.PD
\f[C]/ll?level=L[&partition=P]\f[] Adjust the log level for partition P
where P is one of Bucket, Database, Fs, Herder, History, Ledger,
Overlay, Process, SCP, Tx (or all if no partition is specified).
Level is one of FATAL, ERROR, WARNING, INFO, DEBUG, VERBOSE, TRACE
.IP \[bu] 2
\f[B]maintenance\f[] \f[C]/maintenance?[queue=true]\f[] Performs
maintenance tasks on the instance.
.IP \[bu] 2
\f[C]queue\f[] performs deletion of queue data.
See \f[C]setcursor\f[] for more information.
.IP \[bu] 2
\f[B]metrics\f[] Returns a snapshot of the metrics registry (for
monitoring and debugging purpose).
.IP \[bu] 2
\f[B]clearmetrics\f[] \f[C]/clearmetrics?[domain=DOMAIN]\f[] Clear
metrics for a specified domain.
If no domain specified, clear all metrics (for testing purposes).
.IP \[bu] 2
\f[B]peers\f[] Returns the list of known peers in JSON format.
.IP \[bu] 2
\f[B]quorum\f[] \f[C]/quorum?[node=NODE_ID][&compact=true]\f[] returns
information about the quorum for node NODE_ID (this node by default).
NODE_ID is either a full key (\f[C]GABCD...\f[]), an alias
(\f[C]$name\f[]) or an abbreviated ID (\f[C]\@GABCD\f[]).
If compact is set, only returns a summary version.
.IP \[bu] 2
\f[B]setcursor\f[] \f[C]/setcursor?id=ID&cursor=N\f[] sets or creates a
cursor identified by \f[C]ID\f[] with value \f[C]N\f[].
ID is an uppercase AlphaNum, N is an uint32 that represents the last
ledger sequence number that the instance ID processed.
Cursors are used by dependent services to tell starall\-core which data
can be safely deleted by the instance.
The data is historical data stored in the SQL tables such as txhistory
or ledgerheaders.
When all consumers processed the data for ledger sequence N the data can
be safely removed by the instance.
The actual deletion is performed by invoking the \f[C]maintenance\f[]
endpoint or on startup.
See also \f[C]dropcursor\f[].
.IP \[bu] 2
\f[B]getcursor\f[] \f[C]/getcursor?[id=ID]\f[] gets the cursor
identified by \f[C]ID\f[].
If ID is not defined then all cursors will be returned.
.IP \[bu] 2
\f[B]scp\f[] \f[C]/scp?[limit=n]\f[] Returns a JSON object with the
internal state of the SCP engine for the last n (default 2) ledgers.
.IP \[bu] 2
\f[B]tx\f[] \f[C]/tx?blob=Base64\f[] submit a
transaction (../../learn/concepts/transactions.md) to the network.
blob is a base64 encoded XDR serialized \[aq]TransactionEnvelope\[aq],
and it returns a JSON object with the following properties status:
.RS 2
.IP \[bu] 2
"PENDING" \- transaction is being considered by consensus
.IP \[bu] 2
"DUPLICATE" \- transaction is already PENDING
.IP \[bu] 2
"ERROR" \- transaction rejected by transaction engine error: set when
status is "ERROR".
Base64 encoded, XDR serialized \[aq]TransactionResult\[aq]
.RE
.IP \[bu] 2
\f[B]upgrades\f[]
.IP \[bu] 2
\f[C]/upgrades?mode=get\f[] retrieves the currently configured upgrade
settings
.IP \[bu] 2
\f[C]/upgrades?mode=clear\f[] clears any upgrade settings
.IP \[bu] 2
\f[C]/upgrades?mode=set&upgradetime=DATETIME&[basefee=NUM]&[basereserve=NUM]&[maxtxsize=NUM]&[protocolversion=NUM]\f[]
upgradetime is a required date (UTC) in the form 1970\-01\-01T00:00:00Z.
.RS 2
.IP \[bu] 2
fee (uint32) This is what you would prefer the base fee to be.
It is in stroops
.IP \[bu] 2
basereserve (uint32) This is what you would prefer the base reserve to
be.
It is in stroops.
.IP \[bu] 2
maxtxsize (uint32) This defines the maximum number of transactions to
include in a ledger.
When too many transactions are pending, surge pricing is applied.
The instance picks the top maxtxsize transactions locally to be
considered in the next ledger.
Where transactions are ordered by transaction fee(lower fee transactions
are held for later).
.IP \[bu] 2
protocolversion (uint32) defines the protocol version to upgrade to.
When specified it must match one of the protocol versions supported by
the node and should be greater than ledgerVersion from the current
ledger
.RE
.SS The following HTTP commands are exposed on test instances
.IP \[bu] 2
\f[B]generateload\f[]
\f[C]/generateload[?accounts=N&&offset=K&txs=M&txrate=(R|auto)&batchsize=L]\f[]
Artificially generate load for testing; must be used with
\f[C]ARTIFICIALLY_GENERATE_LOAD_FOR_TESTING\f[] set to true.
Depending on the mode, either creates new accounts or generates payments
on accounts specified (where number of accounts can be offset).
Additionally, allows batching up to 100 account creations per
transaction via \[aq]batchsize\[aq].
.IP \[bu] 2
\f[B]manualclose\f[] If MANUAL_CLOSE is set to true in the .cfg file.
This will cause the current ledger to close.
.IP \[bu] 2
\f[B]testacc\f[] \f[C]/testacc?name=N\f[] Returns basic information
about the account identified by name.
Note that N is a string used as seed, but "root" can be used as well to
specify the root account used for the test instance.
.IP \[bu] 2
\f[B]testtx\f[] \f[C]/testtx?from=F&to=T&amount=N&[create=true]\f[]
Injects a payment transaction (or a create transaction if "create" is
specified) from the account F to the account T, sending N XLM to the
account.
Note that F and T are seed strings but can also be specified as "root"
as a shorthand for the root account for the test instance.
.SH EXAMPLES
.PP
See \f[C]%prefix%/share/doc/*.cfg\f[] for some example starall\-core
configuration files
.SH FILES
.TP
.B starall\-core.cfg
Configuration file (in current working directory by default)
.RS
.RE
.SH SEE ALSO
.TP
.B <https://www.starall.org/developers/starall-core/software/admin.html>
starall\-core administration guide
.RS
.RE
.TP
.B <https://www.starall.org>
Home page of Starall development foundation
.RS
.RE
.SH BUGS
.PP
Please report bugs using the github issue tracker:
.PD 0
.P
.PD
<https://github.com/starall/starall-core/issues>
.SH AUTHORS
Starall Development Foundation.
